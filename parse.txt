awk '$6 ~ /READ|WRITE/ { print $2, $4, $5, $6 }' nxc_output.txt > filtered_shares.txt



#!/bin/bash

INPUT="nxc_output.txt"
OUTPUT="final_filtered_grouped.txt"

# List of excluded system shares
EXCLUDE_RE="^(C\$|ADMIN\$|IPC\$|NETLOGON|SYSVOL)$"

> "$OUTPUT" # Clear output

awk -v exclude="$EXCLUDE_RE" '
$6 == "Enumerated" && $7 == "shares" {
    current_ip = $2;
    current_host = $4;
    print current_ip, current_host >> "'$OUTPUT'"
    next
}

$6 ~ /READ|WRITE/ && $5 !~ exclude {
    printf "    %-20s %s\n", $5, $6 >> "'$OUTPUT'"
}
' "$INPUT"

echo "[+] Grouped output saved to $OUTPUT"




import re
import csv

input_file = "nxc_output.txt"
output_file = "parsed_shares.csv"

# Define excluded share names
excluded_shares = {"ADMIN$", "C$", "IPC$", "NETLOGON", "SYSVOL"}
valid_permissions = {"READ", "WRITE", "READWRITE"}

# Prepare output rows
rows = []

current_ip = ""
current_hostname = ""

with open(input_file, "r", encoding="utf-8") as f:
    for line in f:
        line = line.strip()

        # Detect new host block
        if "[*] Enumerated shares" in line:
            parts = line.split()
            if len(parts) >= 4:
                current_ip = parts[1]
                current_hostname = parts[3]
            continue

        # Skip headers, dashed lines, or malformed
        if any(x in line for x in ["Share", "-----", "[*]"]):
            continue
        if not line.startswith("SMB"):
            continue

        parts = line.split(None, 6)
        if len(parts) < 6:
            continue

        share = parts[4]
        permission = parts[5]

        if share in excluded_shares:
            continue
        if permission not in valid_permissions:
            continue

        rows.append([current_ip, current_hostname, share, permission])

# Save to CSV
with open(output_file, "w", newline="", encoding="utf-8") as f:
    writer = csv.writer(f)
    writer.writerow(["IP", "Hostname", "Share", "Permissions"])
    writer.writerows(rows)

print(f"[+] Parsed {len(rows)} share entries.")
print(f"[+] Output saved to {output_file}")

