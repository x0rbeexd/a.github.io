awk '$6 ~ /READ|WRITE/ { print $2, $4, $5, $6 }' nxc_output.txt > filtered_shares.txt



#!/bin/bash

INPUT="nxc_output.txt"
OUTPUT="final_filtered_grouped.txt"

# List of excluded system shares
EXCLUDE_RE="^(C\$|ADMIN\$|IPC\$|NETLOGON|SYSVOL)$"

> "$OUTPUT" # Clear output

awk -v exclude="$EXCLUDE_RE" '
$6 == "Enumerated" && $7 == "shares" {
    current_ip = $2;
    current_host = $4;
    print current_ip, current_host >> "'$OUTPUT'"
    next
}

$6 ~ /READ|WRITE/ && $5 !~ exclude {
    printf "    %-20s %s\n", $5, $6 >> "'$OUTPUT'"
}
' "$INPUT"

echo "[+] Grouped output saved to $OUTPUT"



 ---------------------------- Pasrse For Only Redable shares by using nxc logs

import re
from collections import defaultdict

log_file = "yourfile.txt"
output_file = "readable_shares.txt"

# Define patterns and exclusions
start_pattern = re.compile(r"Enumerated shares")
share_line_pattern = re.compile(r"^\d{4}-\d{2}-\d{2}.*?(\d+\.\d+\.\d+\.\d+)\s+\d+\s+(\S+)\s+([^\s]+)\s+(READ)\s*", re.IGNORECASE)
excluded_shares = {'ADMIN$', 'C$', 'IPC$', 'print$', 'SYSVOL', 'NETLOGON'}

shares_by_host = defaultdict(set)

with open(log_file, "r", encoding="utf-8") as f:
    lines = f.readlines()

current_ip = None
current_host = None
processing_shares = False

for line in lines:
    if "Enumerated shares" in line:
        # Look backward to get IP and Host
        parts = line.split()
        if len(parts) >= 10:
            current_ip = parts[5].strip()
            current_host = parts[7].strip()
            processing_shares = True
        continue

    if processing_shares:
        match = share_line_pattern.match(line)
        if match:
            ip, hostname, share_name, perm = match.groups()
            if share_name.upper() not in excluded_shares:
                shares_by_host[f"{ip} {hostname}"].add(share_name)
        elif "INFO" not in line:
            # Assume we're done with the current block
            processing_shares = False

# Write the output
with open(output_file, "w") as out:
    for ip_host in sorted(shares_by_host):
        share_list = sorted(shares_by_host[ip_host])
        if share_list:
            out.write(f"{ip_host}: {', '.join(share_list)}\n")


